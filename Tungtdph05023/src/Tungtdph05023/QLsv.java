/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tungtdph05023;
import Tungtdph05023.QLsv;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Tùng_Anh
 */
public class QLsv extends javax.swing.JFrame {
    
    DefaultTableModel dftbSinhVien = new DefaultTableModel();
    /**
     * Creates new form QLsv
     */

    public QLsv() throws SQLException, ClassNotFoundException {
        initComponents();
        LoadData();
    }

    public void LoadData(){
    try {
        ConnectionUtils Data = new ConnectionUtils();
        Connection con = Data.getMyConnection();
            String sql = "Select * from SinhVien";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ResultSetMetaData meta = rs.getMetaData();
            int n = meta.getColumnCount();
            Vector col = new Vector();
            for (int i = 0; i < n; i++) {
                col.add(meta.getColumnName((i + 1)));
            }
            dftbSinhVien.setColumnIdentifiers(col);
            while (rs.next()) {
                Vector row = new Vector();
                for (int i = 0; i < n; i++) {
                    row.addElement(rs.getString(i + 1));
                }
                dftbSinhVien.addRow(row);
            }
            
    tblDanhSachSV.setModel(dftbSinhVien);
    tblDanhSachSV.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
    @Override
    public void valueChanged(ListSelectionEvent e) {
    if (tblDanhSachSV.getSelectedRow() >= 0) {
        txtMaSV.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 0).toString());
        txtHoTen.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 1).toString());
        txtSoDT.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 2).toString());
        txtEmail.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 3).toString());
        txtNgaySinh.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 4).toString());
        txtDiaChi.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 6).toString());
        txtMoTa.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 7).toString());
        String s = tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 5).toString();
        if (s.equals("1")) {
        rbtNam.setSelected(true);
        } else {
        rbtNu.setSelected(true);
                }
            }
        }
    });
        } catch (Exception ex) {
            System.out.println("loi: " + ex.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgGioiTinh = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        txtMaSV = new javax.swing.JTextField();
        txtSoDT = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        rbtNam = new javax.swing.JRadioButton();
        rbtNu = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        lblMaSV = new javax.swing.JLabel();
        txtTkMaSV = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDanhSachSV = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        btnExit = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Quản lý sinh viên");

        jLabel2.setText("Thông tin sinh viên:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Họ tên SV:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Mã SV:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Ngày sinh:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Số ĐT:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Email:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Địa chỉ:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Giới tính:");

        txtHoTen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtMaSV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtSoDT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtNgaySinh.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgGioiTinh.add(rbtNam);
        rbtNam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbtNam.setText("Nam");
        rbtNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtNamActionPerformed(evt);
            }
        });

        btgGioiTinh.add(rbtNu);
        rbtNu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rbtNu.setText("Nữ");
        rbtNu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtNuActionPerformed(evt);
            }
        });

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        jScrollPane1.setViewportView(txtDiaChi);

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel10.setText("Tìm kiếm");

        lblMaSV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblMaSV.setText("Mã SV:");

        txtTkMaSV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel11.setText("Danh sách sinh viên:");

        tblDanhSachSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDanhSachSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachSVMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDanhSachSV);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Mô tả:");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane3.setViewportView(txtMoTa);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel12))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtHoTen)
                                            .addComponent(txtSoDT)
                                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel9))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addComponent(rbtNam)
                                                .addGap(18, 18, 18)
                                                .addComponent(rbtNu))
                                            .addComponent(txtMaSV)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane1)
                                    .addComponent(jScrollPane3))))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMaSV)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTkMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTimKiem)))))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(392, 392, 392)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(rbtNam)
                            .addComponent(rbtNu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew)
                            .addComponent(btnSave)
                            .addComponent(btnExit)
                            .addComponent(btnReset)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTkMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTimKiem)
                                    .addComponent(lblMaSV))))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtNamActionPerformed

    private void rbtNuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtNuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtNuActionPerformed

    private void tblDanhSachSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachSVMouseClicked
  
    }//GEN-LAST:event_tblDanhSachSVMouseClicked

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Bạn có muốn thoát không?", "Exit", JOptionPane.YES_NO_OPTION) == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed
 
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtHoTen.setText("");
        txtMaSV.setText("");
        txtNgaySinh.setText("");
        txtEmail.setText("");
        txtDiaChi.setText("");
        txtSoDT.setText("");
        txtMoTa.setText("");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

    if (txtMaSV.getText().isEmpty() || txtHoTen.getText().isEmpty() || txtSoDT.getText().isEmpty() ||
    txtEmail.getText().isEmpty() || txtNgaySinh.getText().isEmpty() || txtDiaChi.getText().isEmpty() ||
    txtMoTa.getText().isEmpty()) {
    JOptionPane.showMessageDialog(null, "Hãy nhập đầy đủ thông tin");
    return;
    }
    
    String KTDB = "^[!@#$%&’*+/=?{|}~^-]{1,100}$";
    Pattern PT = Pattern.compile(KTDB);
    Matcher HoTen = PT.matcher(txtHoTen.getText());
    Matcher MaSV = PT.matcher(txtMaSV.getText());
    Matcher DiaChi = PT.matcher(txtDiaChi.getText());
    if (HoTen.find()) {
        JOptionPane.showMessageDialog(null, "Họ Tên không chứa kí tự đặc biệt");
        return;
    }
    if (MaSV.find()) {
        JOptionPane.showMessageDialog(null, "Mã sinh viên không chứa kí tự đặc biệt");
        return;
    }
    if (DiaChi.find()) {
        JOptionPane.showMessageDialog(null, "Địa chỉ không chứa kí tự đặc biệt");
        return;
    }
    
    if(txtMaSV.getText().indexOf(" ")>0){
        JOptionPane.showMessageDialog(null, "Mã SV không chứa khoảng trắng");
        return;
    }
    
try {
    if (txtMaSV.getText().length() < 5) {
        JOptionPane.showMessageDialog(null, "Mã số sinh viên ít nhất 5 ký tự bắt đầu bằng FPT");
        return;
        }
    if (!txtMaSV.getText().substring(0,3).equals("FPT")) {
        JOptionPane.showMessageDialog(null, "Mã số sinh viên phải bắt đầu bằng FPT");
        return;
    }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null,ex);
        return;
}
    

    String Email = "^[\\w!#$%&’*+/=?`{|}~^-]+(?:\\.[\\w!#$%&’*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
    Pattern EmailPattern = Pattern.compile(Email);
    Matcher EmailMatcher = EmailPattern.matcher(txtEmail.getText());
    if (!EmailMatcher.find()) {
        JOptionPane.showMessageDialog(null, "Email không hợp lệ");
        return;
    }
    
    Pattern SodtPattern = Pattern.compile("^[0-9]*$");
    Matcher SodtMatcher = SodtPattern.matcher(txtSoDT.getText());
        if (!SodtMatcher.matches()) {
            JOptionPane.showMessageDialog(null, "Số điện thoại phải là số");
            return;
        }
        if (txtSoDT.getText().length() < 9 || txtSoDT.getText().length() > 12) {
            JOptionPane.showMessageDialog(null, "Số điện thoại có 10 - 11 số");
                    return;
        }

    else {
        try {
            ConnectionUtils Data = new ConnectionUtils();
            Connection con = Data.getMyConnection();
            String sql = "Insert into SinhVien values (?,?,?,?,?,?,?,?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, txtMaSV.getText());
            ps.setString(2, txtHoTen.getText());
            ps.setString(3, txtSoDT.getText());
            ps.setString(4, txtEmail.getText());
            ps.setString(5, txtNgaySinh.getText());
            ps.setBoolean(6, rbtNam.isSelected() ? true : false);
            ps.setString(7, txtDiaChi.getText());
            ps.setString(8, txtMoTa.getText());
            ps.executeUpdate();
            dftbSinhVien.setRowCount(0);// tranh khi add vao no add lai tu dau
            LoadData();
            JOptionPane.showMessageDialog(null, "Thêm sinh viên thành công");
            // boolean kt = rtbNam.isSelected() ? true : false;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: " + ex.getMessage());
        }
    }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    if (txtMaSV.getText().isEmpty() || txtHoTen.getText().isEmpty() || txtSoDT.getText().isEmpty() ||
    txtEmail.getText().isEmpty() || txtNgaySinh.getText().isEmpty() || txtDiaChi.getText().isEmpty() ||
    txtMoTa.getText().isEmpty()) {
    JOptionPane.showMessageDialog(null, "Hãy nhập đầy đủ thông tin");
    return;
    }
    
    String KTDB = "^[!@#$%&’*+/=?{|}~^-]{1,100}$";
    Pattern PT = Pattern.compile(KTDB);
    Matcher HoTen = PT.matcher(txtHoTen.getText());
    Matcher MaSV = PT.matcher(txtMaSV.getText());
    Matcher DiaChi = PT.matcher(txtDiaChi.getText());
    if (HoTen.find()) {
        JOptionPane.showMessageDialog(null, "Họ Tên không chứa kí tự đặc biệt");
        return;
    }
    if (MaSV.find()) {
        JOptionPane.showMessageDialog(null, "Mã sinh viên không chứa kí tự đặc biệt");
        return;
    }
    if (DiaChi.find()) {
        JOptionPane.showMessageDialog(null, "Địa chỉ không chứa kí tự đặc biệt");
        return;
    }
    
    if(txtMaSV.getText().indexOf(" ")>0){
        JOptionPane.showMessageDialog(null, "Mã SV không chứa khoảng trắng");
        return;
    }
    
try {
    if (txtMaSV.getText().length() < 5) {
        JOptionPane.showMessageDialog(null, "Mã số sinh viên ít nhất 5 ký tự bắt đầu bằng FPT");
        return;
        }
    if (!txtMaSV.getText().substring(0,3).equals("FPT")) {
        JOptionPane.showMessageDialog(null, "Mã số sinh viên phải bắt đầu bằng FPT");
        return;
    }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null,ex);
        return;
}
    

    String Email = "^[\\w!#$%&’*+/=?`{|}~^-]+(?:\\.[\\w!#$%&’*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
    Pattern EmailPattern = Pattern.compile(Email);
    Matcher EmailMatcher = EmailPattern.matcher(txtEmail.getText());
    if (!EmailMatcher.find()) {
        JOptionPane.showMessageDialog(null, "Email không hợp lệ");
        return;
    }
    
    Pattern SodtPattern = Pattern.compile("^[0-9]*$");
    Matcher SodtMatcher = SodtPattern.matcher(txtSoDT.getText());
        if (!SodtMatcher.matches()) {
            JOptionPane.showMessageDialog(null, "Số điện thoại phải là số");
            return;
        }
        if (txtSoDT.getText().length() < 9 || txtSoDT.getText().length() > 12) {
            JOptionPane.showMessageDialog(null, "Số điện thoại có 10 - 11 số");
                    return;
        }

    else {
        try {
            ConnectionUtils Data = new ConnectionUtils();
            Connection con = Data.getMyConnection();
            String sql = "update SinhVien set MaSV=?, HoTen=?, SoDT=?, Email=?, NgaySinh=?,"
                    + " GioiTinh=?, DiaChi=?, MoTa=? where MaSV =?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, txtMaSV.getText());
            ps.setString(2, txtHoTen.getText());
            ps.setString(3, txtSoDT.getText());
            ps.setString(4, txtEmail.getText());
            ps.setString(5, txtNgaySinh.getText());
            ps.setBoolean(6, rbtNam.isSelected()?true : false);
            ps.setString(7, txtDiaChi.getText());
            ps.setString(8, txtMoTa.getText());
            ps.setString(9, txtMaSV.getText());
            ps.executeUpdate();
            dftbSinhVien.setRowCount(0);
            LoadData();
            JOptionPane.showMessageDialog(null, "Sửa thông tin sinh viên thành công");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Lỗi " + ex.getMessage());
        }
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
if (JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa sinh viên không? Xóa sẽ xóa toàn bộ thông tin sinh viên ( Bao gồm cả điểm sinh viên)", "Delete", JOptionPane.YES_NO_OPTION) == 0) {
        try {
            ConnectionUtils Data = new ConnectionUtils();
            Connection con = Data.getMyConnection();
            // xóa ở bảng điểm trước
            String sqld = "delete from Diem where maSV=?";
            PreparedStatement psd = con.prepareStatement(sqld);
            psd.setString(1, txtMaSV.getText());
            psd.executeUpdate();
            
            String sql = "delete from SinhVien where MaSV=?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, txtMaSV.getText());
            ps.executeUpdate();
            dftbSinhVien.setRowCount(0);
            LoadData();
            JOptionPane.showMessageDialog(null, "Đã xóa sinh viên");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: " + ex.getMessage());
        }
}
    }//GEN-LAST:event_btnDeleteActionPerformed

    
    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
Vector col=new Vector();
col.addElement("MaSV");
col.addElement("HoTen");
col.addElement("SoDT");
col.addElement("Email");
col.addElement("NgaySinh");
col.addElement("GioiTinh");
col.addElement("DiaChi");
col.addElement("MoTa");
PreparedStatement prtm;
ResultSet rs;
ConnectionUtils Data = new ConnectionUtils();
try {
    Connection con = Data.getMyConnection();
    //String sql = "select * from SinhVien where MaSV like %?";
    //prtm=con.prepareStatement(sql);
    //prtm.setString(1, txtTkMaSV.getText());
    //rs=prtm.executeQuery();
    String sql = "select * from SinhVien where MaSV like '%" + txtTkMaSV.getText() + "%'";
    Statement st = con.createStatement();
    rs = st.executeQuery(sql);
    Vector Data2=new Vector();
    int no = 0;
    while(rs.next())
    {
        Vector sinhvien=new Vector();
        sinhvien.addElement(rs.getString("MaSV"));
        sinhvien.addElement(rs.getString("HoTen"));
        sinhvien.addElement(rs.getString("SoDT"));
        sinhvien.addElement(rs.getString("Email"));
        sinhvien.addElement(rs.getDate("NgaySinh"));
        sinhvien.addElement(rs.getByte("GioiTinh"));
        sinhvien.addElement(rs.getString("DiaChi"));
        sinhvien.addElement(rs.getString("MoTa"));
        Data2.addElement(sinhvien);
    }
    tblDanhSachSV.setModel(new DefaultTableModel(Data2,col));
    tblDanhSachSV.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
    @Override
    public void valueChanged(ListSelectionEvent e) {
    if (tblDanhSachSV.getSelectedRow() >= 0) {
        txtMaSV.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 0).toString());
        txtHoTen.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 1).toString());
        txtSoDT.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 2).toString());
        txtEmail.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 3).toString());
        txtNgaySinh.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 4).toString());
        txtDiaChi.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 6).toString());
        txtMoTa.setText(tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 7).toString());
        String s = tblDanhSachSV.getValueAt(tblDanhSachSV.getSelectedRow(), 5).toString();
        if (s.equals("1")) {
        rbtNam.setSelected(true);
        } else {
        rbtNu.setSelected(true);
                }
            }
        }
    });
        } catch (Exception ex) {
            System.out.println("loi: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
    dftbSinhVien.setRowCount(0);
    LoadData();
    }//GEN-LAST:event_btnResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLsv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLsv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLsv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLsv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new QLsv().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(QLsv.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(QLsv.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgGioiTinh;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblMaSV;
    private javax.swing.JRadioButton rbtNam;
    private javax.swing.JRadioButton rbtNu;
    private javax.swing.JTable tblDanhSachSV;
    private javax.swing.JTextArea txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSoDT;
    private javax.swing.JTextField txtTkMaSV;
    // End of variables declaration//GEN-END:variables
}
